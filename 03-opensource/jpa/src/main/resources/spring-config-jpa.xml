<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- jpa Entity Factory 配置 -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="teleportMysqlDataSource"/>
        <property name="packagesToScan" value="org.sprintdragon.opensource.jpa.jpa.simple"/>

        <property name="persistenceUnitName" value="wong-jpa-ordertrace"/>
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence"/>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="false"/>
                <property name="database" value="MYSQL"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <!-- 使用自定义的validator进行jsr303验证 -->
                <entry key="javax.persistence.validation.factory" value-ref="validator"/>
                <!-- jsr303验证模式 因为其要么验证 要么不验证 不能按照规则走 所以此处禁用 -->
                <!--&lt;!&ndash; #http://docs.jboss.org/hibernate/entitymanager/3.6/reference/en/html/configuration.html &ndash;&gt;-->
                <entry key="javax.persistence.validation.mode" value="NONE"/>

                <!--&lt;!&ndash; 只扫描class文件，不扫描hbm，默认两个都搜索 &ndash;&gt;-->
                <entry key="hibernate.archive.autodetection" value="class"/>
                <!--&lt;!&ndash; 不检查@NamedQuery &ndash;&gt;-->
                <entry key="hibernate.query.startup_check" value="false"/>

                <!--<entry key="hibernate.query.substitutions" value="${hibernate.query.substitutions}"/>-->
                <!--<entry key="hibernate.default_batch_fetch_size" value="${hibernate.default_batch_fetch_size}"/>-->
                <!--<entry key="hibernate.max_fetch_depth" value="${hibernate.max_fetch_depth}"/>-->
                <!--<entry key="hibernate.generate_statistics" value="true"/>-->
                <!--<entry key="hibernate.bytecode.use_reflection_optimizer"-->
                <!--value="${hibernate.bytecode.use_reflection_optimizer}"/>-->
                <!--<entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}"/>-->
                <!--<entry key="hibernate.cache.use_query_cache" value="${hibernate.cache.use_query_cache}"/>-->
                <!--<entry key="hibernate.cache.region.factory_class" value="${hibernate.cache.region.factory_class}"/>-->
                <!--<entry key="net.sf.ehcache.configurationResourceName"-->
                <!--value="${net.sf.ehcache.configurationResourceName}"/>-->
                <!--<entry key="hibernate.cache.use_structured_entries" value="${hibernate.cache.use_structured_entries}"/>-->

            </map>
        </property>
    </bean>

    <!--
        spring data jpa repository
        base-package:扫描的包
        repository-impl-postfix:仓库自定义实现类型的后缀  自动扫描并添加到接口的实现
        factory-class 仓库接口的实现工厂

    -->
    <jpa:repositories
            base-package="org.sprintdragon.opensource.jpa.jpa.simple"
            repository-impl-postfix="Impl"
            factory-class="org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean"
            entity-manager-factory-ref="entityManagerFactory"
            transaction-manager-ref="transactionManager">

    </jpa:repositories>


    <!--事务管理器配置-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="doReweight" propagation="REQUIRES_NEW"/>
            <tx:method name="doClear*" propagation="REQUIRES_NEW"/>
            <tx:method name="doSend*" propagation="REQUIRES_NEW"/>
            <tx:method name="doBatchSave*" propagation="REQUIRES_NEW"/>

            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="count*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

</beans>